import { ABI } from '@wharfkit/antelope';

class ABICache {
    constructor(client) {
        this.client = client;
        this.cache = new Map();
        this.pending = new Map();
    }
    async getAbi(account) {
        const key = String(account);
        let record = this.cache.get(key);
        if (!record) {
            let getAbi = this.pending.get(key);
            if (!getAbi) {
                getAbi = this.client.v1.chain.get_raw_abi(account);
                this.pending.set(key, getAbi);
            }
            const response = await getAbi;
            this.pending.delete(key);
            if (response.abi) {
                record = ABI.from(response.abi);
                this.cache.set(key, record);
            }
            else {
                throw new Error(`ABI for ${key} could not be loaded.`);
            }
        }
        return record;
    }
    setAbi(account, abi) {
        const key = String(account);
        this.cache.set(key, ABI.from(abi));
    }
}

export { ABICache, ABICache as default };
//# sourceMappingURL=abicache.m.js.map
