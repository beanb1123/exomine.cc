import { Struct, Checksum256Type, Checksum256 } from '@wharfkit/antelope';

/**
 * Cancelable promises
 *
 * https://stackoverflow.com/questions/46461801/possible-to-add-a-cancel-method-to-promise-in-typescript/46464377#46464377
 */
declare class Canceled extends Error {
    silent: boolean;
    constructor(reason: any, silent?: boolean);
}
interface Cancelable<T> extends Promise<T> {
    cancel(reason?: string, silent?: boolean): Cancelable<T>;
}
declare function cancelable<T>(promise: Promise<T>, onCancel?: (canceled: Canceled) => void): Cancelable<T>;

declare class ExplorerDefinition extends Struct {
    prefix: string;
    suffix: string;
    url(id: string): string;
}

type Fetch = (input: any, init?: any) => Promise<any>;
type LogoType = Logo | {
    dark: string;
    light: string;
} | string;
type ExplorerDefinitionType = ExplorerDefinition | {
    prefix: string;
    suffix: string;
    url: (id: string) => string;
};
type ChainDefinitionType = ChainDefinition | {
    id: Checksum256Type;
    url: string;
    explorer?: ExplorerDefinitionType;
    logo?: LogoType;
};
type LocaleDefinitions = Record<string, any>;

declare class Logo extends Struct {
    dark: string;
    light: string;
    static from(data: LogoType): Logo;
    getVariant(variant: 'dark' | 'light'): string | undefined;
    toString(): string;
}

/**
 * The information required to interact with a given chain.
 */
declare class ChainDefinition extends Struct {
    /**
     * The chain ID.
     */
    id: Checksum256;
    /**
     * The base URL of the chain's API endpoint (e.g. https://jungle4.greymass.com).
     */
    url: string;
    /**
     * The absolute URL(s) to the chain's logo.
     */
    logo?: LogoType;
    /**
     * The explorer definition for the chain.
     */
    explorer?: ExplorerDefinitionType;
    static from(data: any): ChainDefinition;
    get name(): string;
    getLogo(): Logo | undefined;
}
/**
 * A list of string-based chain names to assist autocompletion
 */
type ChainIndices = 'EOS' | 'FIO' | 'FIOTestnet' | 'Jungle4' | 'KylinTestnet' | 'Libre' | 'LibreTestnet' | 'Proton' | 'ProtonTestnet' | 'Telos' | 'TelosTestnet' | 'WAX' | 'WAXTestnet' | 'UX';
/**
 * List of human readable chain names based on the ChainIndices type.
 */
declare const ChainNames: Record<ChainIndices, string>;
/**
 * An exported list of ChainDefinition entries for select chains.
 */
declare const Chains: Record<ChainIndices, ChainDefinition>;
/**
 * A list of chain IDs and their ChainIndices for reference lookups
 */
declare const chainIdsToIndices: Map<Checksum256Type, ChainIndices>;
/**
 * A list of known chain IDs and their logos.
 */
declare const chainLogos: Map<Checksum256Type, LogoType>;

export { Cancelable, Canceled, ChainDefinition, ChainDefinitionType, ChainIndices, ChainNames, Chains, ExplorerDefinition, ExplorerDefinitionType, Fetch, LocaleDefinitions, Logo, LogoType, cancelable, chainIdsToIndices, chainLogos };
